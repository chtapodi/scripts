#!/bin/bash

# Function to display help message
function show_help {
    echo "Usage: $0 -h|--host HOST [-p|--port PORT]"
    echo "Options:"
    echo "  -h, --host HOST     Host to connect to"
    echo "  -p, --port PORT     Optional port number for SSH (default is 22)"
    echo "  -help               Display this help message"
    exit 1
}

# Parse command line arguments
function parse_arguments {
    while [[ $# -gt 0 ]]; do
        case "${1}" in
        -h | --host)
            HOST="${2}"
            shift 2
            ;;
        -p | --port)
            PORT="${2}"
            shift 2
            ;;
        -help)
            show_help
            ;;
        *)
            HOST="${1}"
            shift
            ;;
        esac
    done

    # Validate mandatory arguments
    if [ -z "${HOST}" ]; then
        echo "Error: Host is required."
        show_help
    fi

    # Set default values
    PORT=${PORT:-22}
}

# Function to attempt SSH connection
function try_ssh {
  echo "Attempting SSH connection to ${HOST}:${PORT}..."
  if ssh -p "${PORT}" "${HOST}" ; then
    exit 0
  else
    echo "SSH connection failed. Trying again after ping."
  fi

}

function try_ssh {
  ssh -p "${PORT}" "${HOST}" -o ConnectTimeout=2
  SSH_EXIT_STATUS=$?
  if [ ${SSH_EXIT_STATUS} -eq 0 ]; then
    exit 0
  elif [ ${SSH_EXIT_STATUS} -eq 255 ]; then
    echo "SSH connection failed. Waiting..."
  else
    echo "Error: SSH connection failed with exit status ${SSH_EXIT_STATUS}."
    exit 1
  fi
}

# Function to ping the host until it is up
function ping_host {
    down_since=$(date +%s)
    echo "ping"
    while ! ping -c 1 -W 1 "${HOST}" &>/dev/null; do
        echo ""${HOST}" has been down for $(($(date +%s) - down_since)) seconds."
        sleep 1
    done
}

# Start
parse_arguments "$@"

# Try SSH connection
try_ssh

# If SSH fails, ping the host until it is up
ping_host

# Retry SSH connection after ping suceeds
try_ssh
